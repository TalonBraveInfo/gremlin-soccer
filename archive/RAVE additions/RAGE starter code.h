#ifndef _RAVESTARTER_#define _RAVESTARTER_#ifndef qDebugging	#define qDebugging 1#endif#if qDebugging	#define SIGNAL_ERROR(msg)		{DebugStr(msg); goto error;}#else	#define SIGNAL_ERROR(msg)		{goto error;}#endif#define FAIL_NULL(y,msg)			if (y == NULL) SIGNAL_ERROR(msg)#define FAIL_OSERR(y,msg)		if (y != noErr) SIGNAL_ERROR(msg)#define FAIL_FALSE(y,msg)		if (!y) SIGNAL_ERROR(msg)// We pulled these from the QD3D Acceleration.h file, to force the RAVE.h header// to load with ENUMS always as INTs.#if defined(THINK_C) || defined(__SC__)	#pragma options(!pack_enums, !align_arrays)	#pragma SC options align=power#elif defined(__MWERKS__)	#pragma enumsalwaysint on	#pragma align_array_members off	#pragma options align=native#elif defined(__PPCC__)	#pragma options align=power#endif#include	<Rave.h>#if defined(__MWERKS__)	#pragma enumsalwaysint reset#elif defined(__xlc) || defined(__xlC) || defined(__xlC__) || defined(__XLC121__)	#pragma options enum=reset#endif#include	<QD3DAcceleration.h>// globals for Rave accessextern TQAEngine 			*gTheEngine;// = NULL;extern TQADrawContext		*gTheContext;// = NULL;extern Point				gRaveScreenSize;// = {0, 0};extern char					EngineName[8][128];extern long					OptionalFeatures[8];extern long					FastFeatures[8];extern short				ThisEngineNumber;	extern short				NumberOfEngines;extern short				TextureQuality;extern TQATexture			*Texture_Maps[11];//	utilities for RAVEextern void ReloadTextureMap( int Map);extern Boolean RAGE_Available( GDHandle	mainDevice);extern OSErr SetupRave( GDHandle mainDevice);extern void RaveStartFrame( void);extern void RaveEndFrame( void);extern int RAGE_Init3D( void);extern void end3d_rave( void);extern void Fast_Block( int x, int y, int w, int h, float r, float g, float b);extern void Fast_Line( int x, int y, int x1, int y1, float r, float g, float b);#endif /* _RAVESTARTER_ */