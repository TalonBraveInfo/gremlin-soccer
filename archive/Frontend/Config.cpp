#include "Frontend Vars.h"#include "Config.h"#undef EXTERN#define EXTERN extern#include "FileUtils.h"#include "Front Variables.h"#include "Mallocx.h"extern char PC_speed;int read_config_file(void){BYTE *h;Boolean retvalue;	h = (BYTE *)MallocX(sizeof(match_data)+ (sizeof(int)*12));	retvalue = LoadGame( h, 10);	if(retvalue)		{		memcpy( &match_info, h, sizeof(match_data)); h+= sizeof(match_data);		PC_speed = *h; h++;			  	setup.detail.sky		=	(match_info.sky_toggle &= 1);	  	setup.detail.stadia	=	(match_info.stadium_toggle &= 1);	  	setup.detail.lines	=	(match_info.line_toggle &= 1);	  	match_info.vidi		=	(match_info.vidi_toggle &= 1);	  	setup.detail.players	=	(match_info.players_toggle &= 1);	  	setup.detail.pitch	=	match_info.pitch_toggle;#if USERAVEENGINE==YES		setup.start_res		=	match_info.res_toggle = 1;#else	  	setup.start_res		=	(match_info.res_toggle &= 1);#endif	  	match_info.camera		=	match_info.camera_toggle;	  	setup.screen_size		=	match_info.size_toggle;	  	match_info.offside	=	(match_info.offside_toggle &= 1);	  	match_info.substitutes=	(match_info.substitutes_toggle &= 1);	  	match_info.freekicks	=	(match_info.freekicks_toggle &= 1);	  	match_info.time		=	match_info.time_toggle;	  	net_half				=	match_info.time;	  	match_info.bookings	=	(match_info.bookings_toggle &= 1);	  	match_info.wind		=	match_info.wind_toggle;	  	batch_info.Port_toggle=   match_info.NoOfPlayers&1;   	  	  	menu_data[MENU_A14].ButtonLIST[0].button_index	=	match_info.CROWD;	  	menu_data[MENU_A14].ButtonLIST[1].button_index	=	match_info.COMMENTRY;	  	menu_data[MENU_A14].ButtonLIST[2].button_index	=	match_info.MASTER;	  	menu_data[MENU_A14].ButtonLIST[3].button_index	=	match_info.PITCH;	  	menu_data[MENU_A14].ButtonLIST[4].button_index	=	match_info.MUSIC;	  	match_info.crowd		=	menu_data[MENU_A14].ButtonLIST[0].button_index*163;   // this multipication rounds upto 32600.	  	match_info.commentary	=	menu_data[MENU_A14].ButtonLIST[1].button_index*163;   // the value should really be 163.835 to	  	match_info.master		=	menu_data[MENU_A14].ButtonLIST[2].button_index*163;   // round upto 32767.	  	match_info.pitch		=	menu_data[MENU_A14].ButtonLIST[3].button_index*163;	  	match_info.audio		=	match_info.audio_toggle;	  	}	FreeX(h);	match_info.language = Language;	return retvalue;}void write_config_file(void){Handle h;BYTE *hh;	h = NewHandleClear( sizeof(match_data)+ (sizeof(int)*12)); HLockHi(h); hh=(BYTE *)*h;	match_info.CROWD	= menu_data[MENU_A14].ButtonLIST[0].button_index;		match_info.COMMENTRY= menu_data[MENU_A14].ButtonLIST[1].button_index;		match_info.MASTER	= menu_data[MENU_A14].ButtonLIST[2].button_index;		match_info.PITCH	= menu_data[MENU_A14].ButtonLIST[3].button_index;		match_info.MUSIC	= menu_data[MENU_A14].ButtonLIST[4].button_index;		memcpy( hh, &match_info, sizeof(match_data)); hh+=sizeof(match_data);	*hh = PC_speed; hh++;	SaveGame( h, 10);	DisposeHandle(h);}