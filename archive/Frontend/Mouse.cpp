#include "Frontend Vars.h"#include "Mouse.h"#undef EXTERN#define EXTERN extern#include "Blitter.h"#include "Front Variables.h"#include "Menudisp.h"#include "Sprite.h"#include "Use DrawSprockets.h"void InitialiseMOUSE(void){}void MousePresent(void){	MouseActive = true;}void ReadMouseData(int f, long ret){Point point;short mx, my, bt, te;short sl, sr, st, sb;	if(!(f & EDITABLE_TEXT))		{		DSpGetMouse (&point);		DSpContext_GlobalToLocal( theContext, &point);		mx = point.h;	//  - Xdiff;		my = point.v;	//  - Ydiff;		bt = Button() | (ret ? 1:0);//		MouseXposn = max( MouseXminimum, mx);//	 	MouseXposn = min( MouseXmaximum, MouseXposn);//		MouseYposn = max( MouseYminimum, my);//		MouseYposn = min( MouseYmaximum, MouseYposn);//		mx = min( mx, 640);//		my = max( min( my, 480), 1);			mx = max( min( mx, gScreenRealWidth), 0);		my = max( min( my, gScreenRealHeight), 0);					MouseXposn = mx * (624.0/gScreenRealWidth);		MouseYposn = my * (453.0/gScreenRealHeight);				MouseYposn++;		MouseXposn++;				if(MouseDeBOUNCE)			{			if(!bt)				MouseDeBOUNCE = 0;			else				bt = 0;			}		MouseBUTTONS = bt;		}}//ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป //บ                                                                                                                              บ//บ  Get_mouse_data()                                                                                                            บ//บ																 บ//บ																 บ//บ		Reads mouse data and deletes old mouse image from psudo screen.                                                  บ//บ																 บ//บ																 บ//ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ void Get_mouse_data(){	ReadMouseData(MouseFlags, 0);	if ((MouseFlags & REPL_BKG)!=0)		{		ReplaceMOB();		Add_to_copy_list( OldMouseX, OldMouseY, OldMouseWidth, OldMouseHeight);		MouseFlags&=	65535-REPL_BKG;		}	if ( !(OldMouseX==MouseXposn && OldMouseY==MouseYposn && !MouseBUTTONS))		GDVtimer = DEMO_TIME;}//ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป //บ                                                                                                                              บ//บ  Display_mouse_cursor()                                                                                                      บ//บ																 บ//บ																 บ//บ		Displays mouse cursor to psudo screen and sets up data from erasing cursor in next frame.                        บ//บ																 บ//บ																 บ//ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ void Display_mouse_cursor(){	if	( (MouseFlags & EDIT_TEXT)==0 && (MouseFlags & MOUSE_OFF)==0)		{		OldMouseX = SpriteXposn = MouseXposn; 		OldMouseY = SpriteYposn = MouseYposn;				SetupSpriteDATA(MOUSE_IMAGE+ (MouseBUTTONS&1)); 		DisplayDESTINATION	=	psudo_buffer;				DrawMOB();		Add_to_copy_list( MouseXposn, MouseYposn, OldMouseWidth = SpriteWIDTH, OldMouseHeight = SpriteHEIGHT);		MouseFlags|=	REPL_BKG;		}}