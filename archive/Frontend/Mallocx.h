#if MEM_DEBUG==ON#define MallocX(X)		MallocReal((X), __FILE__, __LINE__)#define FreeX(X)		FreeReal((X), __FILE__, __LINE__)#define MarkX(X,Y)		MarkReal((X), Y, __FILE__, __LINE__)#define HeapPurge()		HeapReal(__FILE__,__LINE__);EXTERN void OpenDebugFile(void);EXTERN void CloseDebugFile(void);EXTERN void *MallocReal(long Size, char *File, int Line);EXTERN void FreeReal(void *Address, char *file, int Line);EXTERN void HeapReal(char *File, int Line);EXTERN void *MarkReal(Handle Hand, long Size, char *File, int Line);EXTERN FILE *DebugFile;#else#define MallocX(X)		MallocReal(X)#define FreeX(X)		FreeReal(X);#define MarkX(X,Y)		MarkReal((X), Y)#define HeapPurge()		HeapReal();EXTERN void OpenDebugFile(void);EXTERN void CloseDebugFile(void);EXTERN void *MallocReal(long Size);EXTERN void FreeReal(void *Address);EXTERN void *MarkReal(Handle Hand, long Size );EXTERN void HeapReal(void);#endifEXTERN Handle MallocGetHandle( void *Address);#if 0EXTERN void BlockAllocate( int Size);EXTERN void BlockDeallocate(void);EXTERN void *BlockMalloc( int Size);EXTERN void BlockFree( void *Address);#endif